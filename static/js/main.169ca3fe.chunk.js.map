{"version":3,"sources":["components/Cross.js","components/Circle.js","components/Board.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Cross","props","hovered","className","Circle","patterns","Board","componentDidMount","document","getElementsByClassName","addEventListener","clear","displaySymbol","index","turn","value","state","setState","prevState","filled","resultCheck","style","cursor","hoverOnSymbol","backToBlank","i","flag","x","currVal","winner","resultDisplay","text","display","innerHTML","sq","players","onMouseOver","onMouseLeave","onClick","this","Component","Result","newGame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.169ca3fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cross.css';\r\n\r\nfunction Cross(props) {\r\n    if(props.hovered===\"true\"){\r\n        return (\r\n            <div className=\"cross hovered\">\r\n                <div className=\"line1\"></div>\r\n                <div className=\"line2\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <div className=\"cross\">\r\n                <div className=\"line1\"></div>\r\n                <div className=\"line2\"></div>\r\n            </div>\r\n        );\r\n        \r\n    }       \r\n\r\n}\r\n\r\nexport default Cross;","import React from 'react';\r\nimport './circle.css';\r\n\r\nfunction Circle(props) {\r\n    if(props.hovered===\"true\")\r\n        return (\r\n            <div className=\"circle hovered\">  \r\n            </div>\r\n        );\r\n    else \r\n        return (\r\n            <div className=\"circle\">  \r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Circle;","import React, { Component } from 'react';\r\nimport Cross from './Cross';\r\nimport Circle from './Circle';\r\n\r\nvar patterns = [ [0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]]\r\n\r\nclass Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            players: \"one\",\r\n            turn: 'X',\r\n            value: [0,0,0,0,0,0,0,0,0],\r\n            filled: 0\r\n        };\r\n        \r\n        if(props.players === \"two\")\r\n            this.state.players = \"two\";\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let replay_button = document.getElementsByClassName(\"replay-button\")[0];\r\n        replay_button.addEventListener('click', this.clear);\r\n\r\n    }\r\n    \r\n\r\n    displaySymbol = (index) => {\r\n\r\n        let turn\r\n        let value = [...this.state.value]\r\n\r\n        if(value[index]===1 || value[index]===2)\r\n            return;\r\n\r\n        if(this.state.turn === 'X'){\r\n            value[index] = 1\r\n            turn = 'O'\r\n        }\r\n        else{\r\n            value[index] = 2\r\n            turn = 'X'\r\n        }\r\n\r\n        \r\n    \r\n\r\n        this.setState(prevState =>( {\r\n            value: value,\r\n            turn : turn,\r\n            filled : prevState.filled + 1\r\n        }), this.resultCheck);\r\n\r\n        let curr_sq = document.getElementsByClassName(\"square\")[index];\r\n        curr_sq.style.cursor = \"default\";\r\n\r\n\r\n    }\r\n    \r\n    hoverOnSymbol = (index) => {\r\n        let value = [...this.state.value]\r\n\r\n        if(value[index]===0)\r\n        {\r\n            if(this.state.turn==='X')\r\n                value[index] = 3\r\n            else    \r\n                value[index] = 4\r\n\r\n            this.setState({\r\n               value :value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    backToBlank = (index) => {\r\n        let value = [...this.state.value]\r\n        if(value[index]===3 || value[index]===4)\r\n        {\r\n            value[index] = 0\r\n            this.setState({\r\n                value: value\r\n            })\r\n        }\r\n    }\r\n\r\n    resultCheck = () => {\r\n        let i\r\n        let flag = false\r\n        let value = [...this.state.value]\r\n        for(i=0; i<8; i++){\r\n            let x = patterns[i]\r\n            \r\n            let currVal = value[x[0]]\r\n        \r\n            if(value[x[1]]!==0 && value[x[2]]!==0 && value[x[1]]===currVal && value[x[2]]===currVal)\r\n            {\r\n                let winner = this.state.turn;\r\n                if(this.state.turn === 'X')\r\n                    winner = 'O'\r\n                else    \r\n                    winner = 'X'\r\n                flag = true\r\n                this.resultDisplay(winner + \" wins !!\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!flag && this.state.filled === 9)\r\n            this.resultDisplay(\"Its a draw !!\")\r\n    }\r\n\r\n    resultDisplay = (text) =>\r\n    {\r\n        let result_div = document.getElementsByClassName(\"result-div\")[0];\r\n        result_div.style.display = \"flex\";\r\n        let result_text = document.getElementsByClassName(\"result-text\")[0];\r\n        result_text.innerHTML = text;\r\n    }\r\n\r\n    clear = () => {\r\n        let value = [0,0,0,0,0,0,0,0,0]\r\n        this.setState({\r\n            value: value,\r\n            turn: 'X',\r\n            filled: 0\r\n        })\r\n        let sq = document.getElementsByClassName(\"square\");\r\n        let i;\r\n        for( i=0; i<9; i++)\r\n            sq[i].style.cursor=\"pointer\"\r\n       \r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                \r\n                \r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(0)}\r\n                    onMouseLeave = {() => this.backToBlank(0)}\r\n                    onClick={() => this.displaySymbol(0)}>\r\n                        { \r\n                            this.state.value[0] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[0] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[0] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[0] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(1)}\r\n                    onMouseLeave = {() => this.backToBlank(1)}\r\n                    onClick={() => this.displaySymbol(1)}>\r\n                        { \r\n                            this.state.value[1] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[1] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[1] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[1] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(2)}\r\n                    onMouseLeave = {() => this.backToBlank(2)}\r\n                    onClick={() => this.displaySymbol(2)}>\r\n                        { \r\n                            this.state.value[2] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[2] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[2] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[2] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(3)}\r\n                    onMouseLeave = {() => this.backToBlank(3)}\r\n                    onClick={() => this.displaySymbol(3)}>\r\n                        { \r\n                            this.state.value[3] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[3] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[3] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[3] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(4)}\r\n                    onMouseLeave = {() => this.backToBlank(4)}\r\n                    onClick={() => this.displaySymbol(4)}>\r\n                        { \r\n                            this.state.value[4] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[4] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[4] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[4] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(5)}\r\n                    onMouseLeave = {() => this.backToBlank(5)}\r\n                    onClick={() => this.displaySymbol(5)}>\r\n                        { \r\n                            this.state.value[5] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[5] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[5] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[5] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(6)}\r\n                    onMouseLeave = {() => this.backToBlank(6)}\r\n                    onClick={() => this.displaySymbol(6)}>\r\n                        { \r\n                            this.state.value[6] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[6] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[6] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[6] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(7)}\r\n                    onMouseLeave = {() => this.backToBlank(7)}\r\n                    onClick={() => this.displaySymbol(7)}>\r\n                        { \r\n                            this.state.value[7] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[7] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[7] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[7] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n\r\n                <div className=\"square\" \r\n                    onMouseOver={() => this.hoverOnSymbol(8)}\r\n                    onMouseLeave = {() => this.backToBlank(8)}\r\n                    onClick={() => this.displaySymbol(8)}>\r\n                        { \r\n                            this.state.value[8] === 1 ? <Cross hovered=\"false\"/> : \r\n                            (this.state.value[8] === 2 ? <Circle hovered=\"false\"/> :\r\n                            (this.state.value[8] === 3 ? <Cross hovered=\"true\"/> :\r\n                            (this.state.value[8] === 4 ? <Circle hovered=\"true\"/> : <div></div>)))\r\n                        }\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport './result.css'\r\n\r\n\r\nclass Result extends Component {\r\n\r\n    newGame = () =>\r\n    {\r\n        let result_div = document.getElementsByClassName(\"result-div\")[0];\r\n        result_div.style.display = \"none\";\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result-div\">\r\n                <div className=\"result-text\">\r\n                    Draw\r\n                </div>\r\n                <button className=\"replay-button\" onClick={this.newGame}>Replay!</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import './App.css';\nimport Board from './components/Board';\nimport Result from './components/Result';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"heading-div\">\n          <div className=\"main-heading\">\n            Tic Tac Toe\n          </div>\n        </div>\n\n        <Board players=\"two\" />\n        <Result />\n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}